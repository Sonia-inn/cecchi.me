<?php
// Load zip codes
$zips = array(
"00723", "00910", "01003", "01097", "01331", "01517", "01718", "01879", "02050", "02149", "02338", "02532", "02670", "02825", "02915", "03225", "03442", "03765", "03860", "04039", "04211", "04341", "04463", "04614", "04737", "04910", "04989", "05152", "05454", "05666", "05824", "06029", "06109", "06256", "06411", "06504", "06753", "06888", "07047", "07194", "07498", "07709", "07838", "07978", "08068", "08242", "08520", "08732", "08865", "09089", "09266", "09569", "09720", "09844", "10047", "10165", "10452", "10551", "10916", "11021", "11239", "11429", "11598", "11767", "11959", "12067", "12161", "12241", "12444", "12524", "12725", "12817", "12918", "13022", "13116", "13137", "13138", "13139", "13140", "13141", "13142", "13319", "13438", "13622", "13694", "13820", "14040", "14145", "14416", "14522", "14622", "14747", "14844", "15020", "15106", "15238", "15340", "15447", "15552", "15673", "15756", "15922", "16051", "16218", "16351", "16512", "16666", "16830", "16936", "17055", "17177", "17316", "17519", "17726", "17841", "17957", "18066", "18249", "18430", "18617", "18823", "18956", "19053", "19129", "19339", "19441", "19539", "19806", "20001", "20080", "20170", "20254", "20424", "20551", "20645", "20743", "20850", "21027", "21140", "21278", "21626", "21714", "21781", "21782", "21783", "21917", "22172", "22334", "22552", "22726", "22923", "23054", "23150", "23279", "23417", "23517", "23836", "23952", "24062", "24156", "24293", "24322", "24323", "24324", "24325", "24473", "24585", "24808", "24895", "25030", "25141", "25271", "25423", "25612", "25718", "25871", "26038", "26218", "26350", "26534", "26684", "27022", "27217", "27343", "27519", "27597", "27605", "27606", "27812", "27881", "27972", "28092", "28213", "28301", "28377", "28458", "28562", "28649", "28650", "28651", "28652", "28724", "28761", "28770", "28771", "29048", "29161", "29330", "29433", "29541", "29622", "29695", "29844", "30018", "30093", "30171", "30281", "30355", "30455", "30562", "30671", "30833", "31054", "31205", "31498", "31629", "31750", "31825", "32079", "32175", "32258", "32402", "32516", "32607", "32720", "32810", "32923", "33032", "33133", "33234", "33402", "33478", "33601", "33707", "33813", "33909", "34036", "34211", "34436", "34681", "34972", "35072", "35188", "35280", "35281", "35282", "35283", "35285", "35286", "35542", "35649", "35816", "36027", "36117", "36317", "36483", "36585", "36748", "36904", "37070", "37171", "37305", "37376", "37664", "37777", "37887", "38044", "38139", "38271", "38382", "38559", "38654", "38774", "38921", "39079", "39183", "39347", "39506", "39669", "40048", "40207", "40319", "40461", "40603", "40906", "41046", "41175", "41408", "41606", "41778", "42048", "42206", "42349", "42553", "43004", "43098", "43217", "43347", "43519", "43652", "43780", "43950", "44068", "44143", "44274", "44430", "44618", "44701", "44857", "45064", "45204", "45296", "45370", "45501", "45690", "45806", "45884", "46102", "46203", "46295", "46296", "46501", "46629", "46792", "46922", "47020", "47164", "47336", "47436", "47564", "47719", "47866", "47966", "48054", "48131", "48214", "48325", "48430", "48606", "48725", "48826", "48897", "49032", "49039", "49040", "49117", "49281", "49410", "49530", "49676", "49768", "49862", "49962", "50068", "50161", "50262", "50392", "50511", "50592", "50670", "51016", "51245", "51503", "51640", "52141", "52245", "52401", "52619", "52759", "53049", "53140", "53226", "53541", "53715", "53933", "54111", "54221", "54444", "54537", "54649", "54765", "54874", "54975", "55069", "55177", "55363", "55430", "55576", "55735", "55906", "55991", "56082", "56171", "56271", "56350", "56461", "56565", "56670", "57010", "57103", "57263", "57375", "57523", "57646", "57779", "58071", "58259", "58379", "58492", "58634", "58772", "59037", "59219", "59401", "59501", "59728", "59853", "60018", "60097", "60172", "60436", "60522", "60622", "60707", "61007", "61101", "61301", "61412", "61489", "61628", "61761", "61872", "62033", "62219", "62297", "62419", "62522", "62639", "62762", "62857", "62928", "63011", "63105", "63199", "63446", "63626", "63774", "63935", "64066", "64145", "64442", "64631", "64744", "64868", "65085", "65305", "65540", "65641", "65732", "66002", "66090", "66411", "66544", "66735", "66865", "67031", "67144", "67260", "67275", "67276", "67277", "67278", "67464", "67574", "67740", "68005", "68112", "68329", "68424", "68620", "68735", "68822", "68932", "69040", "69331", "70062", "70160", "70402", "70521", "70630", "70747", "70831", "71072", "71229", "71339", "71446", "71663", "71841", "72001", "72075", "72165", "72336", "72431", "72534", "72645", "72758", "72924", "73042", "73116", "73301", "73546", "73557", "73569", "73626", "73627", "73758", "74020", "74110", "74352", "74502", "74721", "74859", "75023", "75103", "75208", "75310", "75425", "75504", "75670", "75831", "75964", "76068", "76179", "76309", "76471", "76577", "76693", "76883", "77033", "77099", "77275", "77369", "77455", "77536", "77643", "77870", "78016", "78130", "78241", "78353", "78475", "78596", "78670", "78758", "78938", "79059", "79182", "79351", "79520", "79734", "79903", "79988", "80121", "80241", "80429", "80524", "80728", "80901", "81021", "81136", "81334", "81643", "82322", "82420", "82421", "82731", "83205", "83324", "83464", "83641", "83803", "84003", "84075", "84150", "84409", "84650", "84763", "85048", "85236", "85320", "85530", "85650", "85922", "86321", "86538", "87101", "87357", "87556", "87901", "88113", "88342", "88540", "89017", "89131", "89424", "89823", "90055", "90245", "90601", "90802", "91116", "91341", "91501", "91758", "91947", "92084", "92166", "92263", "92363", "92536", "92650", "92821", "93030", "93232", "93386", "93516", "93624", "93728", "94010", "94112", "94209", "94401", "94562", "94666", "94970", "95071", "95194", "95313", "95387", "95470", "95589", "95670", "95819", "95940", "96022", "96105", "96221", "96512", "96643", "96940", "97067", "97216", "97329", "97413", "97490", "97712", "97865", "98038", "98145", "98258", "98345", "98424", "98556", "98637", "98846", "99020", "99157", "99338", "99566", "99650", "99726", "99820", "99929", "99950"
);

// Remove excess headers if possible.
if(function_exists('header_remove')) {
	array_map('header_remove', array('Date', 'X-Powered-By', 'Server', 'Keep-Alive', 'Connection'));
}

// Set some new headers and flush them
header("Content-type: text/plain");
if(isset($_GET['debug']) && $_GET['debug']) {
	header("Transfer-encoding: chunked");
}
ob_flush();
flush();

// Primary chunk flushing function
function send($chunk){
	echo dechex(strlen($chunk))."\r\n".$chunk."\r\n";
	ob_flush();
	flush();
}

// Send some random weather forecasts
function weather($zip) {
	$request = "http://www.google.com/ig/api?weather=".$zip."&hl=en";
	// Downloads weather data based on location - I used my zip code.
	$xmlstr = file_get_contents($request,0);
	// Parses XML
	$xml = new SimplexmlElement($xmlstr);
	// Loops XML
	$count = 0;
	foreach($xml->weather as $item) {
	$out = '<b>Forecast for '.$item->forecast_information->city['data'].':</b><div id="weather">';
		foreach($item->forecast_conditions as $new) {
			$out .= '<div class="weatherIcon">';
			$out .= '<img src="http://www.google.com/'.$new->icon['data'].'"/><br/>';
			$out .= $new->day_of_week['data'];
			$out .= '</div>';
		}
	}
	$out .= '</div>';
	return $out;
}

send("<!-- We need a big fat chunk to get us started in Chrome and maybe some other browsers. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis mauris sit amet diam accumsan dictum in eget augue. Integer lorem erat, lobortis id rhoncus at, fringilla eget leo. Nunc bibendum lorem in enim convallis euismod. Donec in nisl sed turpis volutpat iaculis. Sed euismod euismod lorem, non mattis metus feugiat sed. Donec non sapien sit amet sapien dictum consequat eget et sem. Cras sit amet leo metus. Etiam at nunc ut mi consequat bibendum eget sit amet tellus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis mauris sit amet diam accumsan dictum in eget augue. Integer lorem erat, lobortis id rhoncus at, fringilla eget leo. Nunc bibendum lorem in enim convallis euismod. Donec in nisl sed turpis volutpat iaculis. Sed euismod euismod lorem, non mattis metus feugiat sed. Donec non sapien sit amet sapien dictum consequat eget et sem. Cras sit amet leo metus. Etiam at nunc ut mi consequat bibendum eget sit amet tellus.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis mauris sit amet diam accumsan dictum in eget augue. Integer lorem erat, lobortis id rhoncus at, fringilla eget leo. Nunc bibendum lorem in enim convallis euismod. Donec in nisl sed turpis volutpat iaculis. Sed euismod euismod lorem, non mattis metus feugiat sed. Donec non sapien sit amet sapien dictum consequat eget et sem. Cras sit amet leo metus. Etiam at nunc ut mi consequat bibendum eget sit amet tellus. -->

<style type='text/css'>
.weatherIcon {
	float: left;
	margin: 0px 5px;
}
.weatherIcon:last-child {
	float: none;
}
</style>");
sleep(0);

$i = 0;
while($i < 5) {
	$randzip = $zips[array_rand($zips, 1)];
	$weather = weather($randzip);
	send($weather);
	sleep(1);
	$i++;
}

echo "0\r\n\r\n";
flush();
?>